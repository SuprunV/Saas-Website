variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    # Minu konteineri registri aadress AWS-s (Amazon Elastic Container Registry)
    # Asenda MINU_REGISTRI_NIMI
    DOCKER_REGISTRY: 662032419283.dkr.ecr.eu-north-1.amazonaws.com/beautyservice
    DOMAIN: beautyservice.itb2203.tautar.ee

stages:
    - build
    # - api_test
    - deploy

build:
    image:
        name: docker:20.10.21-alpine3.16
    services:
        - docker:20.10.21-dind-alpine3.16
    only:
        - master
        - main
    before_script:
        - apk add --no-cache curl jq python3 py3-pip
        - pip install awscli
        - aws ecr get-login-password | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
    script:
        - docker build -t ${DOCKER_REGISTRY}/back:${CI_COMMIT_SHA} ./BackEnd/
        - docker build -t ${DOCKER_REGISTRY}/front:${CI_COMMIT_SHA} ./FrontEnd/
        - docker push ${DOCKER_REGISTRY}/back:${CI_COMMIT_SHA}
        - docker push ${DOCKER_REGISTRY}/front:${CI_COMMIT_SHA}
    after_script:
        - docker logout ${DOCKER_REGISTRY}
    stage: build
    artifacts:
        paths:

api_test:
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_TLS_CERTDIR: ""
    image:
        name: docker/compose:1.29.2
        entrypoint: ["/bin/sh", "-c"]
    services:
        - docker:20.10.21-dind-alpine3.16
    only:
        - master
        - main
    before_script:
        - apk add --no-cache curl jq python3 py3-pip
        - pip install awscli
        - aws ecr get-login-password | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}
    script:
        - cd ApiTests
        - docker-compose up --abort-on-container-exit --exit-code-from newman
        - docker-compose down -v
    after_script:
        - docker logout ${ITB2203_REGISTRY}
    stage: api_test
    tags:
        - itb2203
deploy:
    image: docker:20.10.21-alpine3.16
    when: manual
    only:
        - master
        - main
    before_script:
        # teeme kindlaks, et ssh on installitud
        - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )"

        # käivitame ssh
        - eval $(ssh-agent -s)

        # loome ssh kausta ja anname ssh kaustas lugemise, kirjutamise ja käivitamise õigused
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh

        # leiame kõik serveri public key-d ja usaldame neid runneri keskkonnas
        - ssh-keyscan ${DOMAIN} >> ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts

    script:
        # loeme GitLabi muutujatest private key
        - echo "$SSH_PRIVATE_KEY"
        - ssh-add <(echo "$SSH_PRIVATE_KEY" | tr -d '\r')

        # loome ssh ühenduse
        - ssh ubuntu@${DOMAIN} "(aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${DOCKER_REGISTRY}) && CI_COMMIT_SHA=${CI_COMMIT_SHA} docker compose -f ~/app/docker-compose.yml up -d"
    after_script:
        - exit
    stage: deploy
